# This file should ensure the existence of records required to run the application in every environment (production,
# development, test). The code here should be idempotent so that it can be executed at any point in every environment.
# The data can then be loaded with the bin/rails db:seed command (or created alongside the database with db:setup).
#
# Example:
#
#   ["Action", "Comedy", "Drama", "Horror"].each do |genre_name|
#     MovieGenre.find_or_create_by!(name: genre_name)
#   end

# ユーザーデータの作成
puts "ユーザーデータを作成しています..."

# 管理者ユーザーの作成
admin = User.where(email: 'test@example.com').first_or_create do |user|
  user.name = 'test@example.com'
  user.email = 'test@example.com'
  user.password = 'test@example.com'
  user.password_confirmation = 'test@example.com'
end
puts "管理者ユーザーを作成しました: #{admin.email}"

# 一般ユーザーの作成
normal_user = User.where(email: 'tarou.nakazawa@gmail.com').first_or_create do |user|
  user.name = 'tarou.nakazawa'
  user.email = 'tarou.nakazawa@gmail.com'
  user.password = 'qwer1234'
  user.password_confirmation = 'qwer1234'
end
puts "一般ユーザーを作成しました: #{normal_user.email}"

# サンプルプロンプトを作成 (管理者ユーザー用)
admin_prompts = [
  {
    title: "ココナラのプロフィールを最適化",
    url: "https://coconala.com/profile/edit",
    user_id: admin.id
  },
  {
    title: "社会性偽装装置",
    url: "https://chatgpt.com/g/g-67c0b9d36bedc8191b066...",
    user_id: admin.id
  }
]

admin_prompts.each do |prompt_data|
  prompt = Prompt.create!(
    title: prompt_data[:title],
    url: prompt_data[:url],
    user_id: prompt_data[:user_id]
  )
  puts "管理者用プロンプトを作成しました: #{prompt.title}"
end

# サンプルプロンプトを作成 (一般ユーザー用)
normal_user_prompts = [
  {
    title: "ビジネスメールの文章校正・改善",
    url: "https://example.com/business-email",
    user_id: normal_user.id
  },
  {
    title: "商品紹介文の作成",
    url: "https://coconala.com/services/writing",
    user_id: normal_user.id
  },
  {
    title: "ブログ記事構成の作成",
    url: "https://coconala.com/services/blog",
    user_id: normal_user.id
  }
]

normal_user_prompts.each do |prompt_data|
  prompt = Prompt.create!(
    title: prompt_data[:title],
    url: prompt_data[:url],
    user_id: prompt_data[:user_id]
  )
  puts "一般ユーザー用プロンプトを作成しました: #{prompt.title}"
end

# 登録件数0のタグを追加（AIによるタグ提案機能のために利用）
standalone_tags = [
  # ビジネス関連
  "起業", "副業", "フリーランス", "リモートワーク", "在宅ワーク", "アントレプレナー",
  "キャリア", "転職", "就職", "面接", "履歴書", "職務経歴書",
  "営業", "セールス", "BtoB", "BtoC", "顧客獲得", "リード獲得",
  
  # マーケティング関連
  "コンテンツマーケティング", "SEO", "MEO", "リスティング広告", "SNS広告",
  "Instagram", "Twitter", "Facebook", "LinkedIn", "YouTube", "TikTok",
  "インフルエンサー", "ソーシャルメディア", "広告戦略", "ブランディング",
  
  # ライティング関連
  "コピーライティング", "セールスライティング", "ブログ", "記事作成",
  "メルマガ", "プレスリリース", "Webライティング", "キャッチコピー",
  
  # デザイン関連
  "グラフィックデザイン", "Webデザイン", "UIデザイン", "UXデザイン",
  "ロゴデザイン", "バナーデザイン", "イラスト", "ワイヤーフレーム",
  
  # 技術関連
  "プログラミング", "WordPress", "HTML", "CSS", "JavaScript", "PHP",
  "アプリ開発", "Webアプリ", "モバイルアプリ", "データ分析", "AI活用",
  
  # その他専門分野
  "法律", "会計", "税務", "健康", "美容", "教育", "英語", "翻訳",
  "動画編集", "ナレーション", "音声", "写真撮影", "料理", "旅行"
]

# 登録件数0のタグをDBに直接登録
standalone_tags.each do |tag_name|
  Tag.where(name: tag_name, prompt_id: nil).first_or_create
end

puts "===== シードデータ作成完了 ====="
puts "ユーザー数: #{User.count}"
puts "プロンプト数: #{Prompt.count}"
puts "関連付けられたタグ数: #{Tag.where.not(prompt_id: nil).count}"
puts "登録件数0のタグ数: #{Tag.where(prompt_id: nil).count}"

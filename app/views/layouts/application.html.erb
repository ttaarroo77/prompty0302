<!DOCTYPE html>
<html>
  <head>
    <title>Prompty</title>
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>

    <% # aria-hiddenを防止するためのスタイルとスクリプト %>
    <style>
      body[aria-hidden="true"] {
        aria-hidden: false !important;
      }
    </style>
    <script>
      // ページ読み込み開始時点でaria-hidden属性を防止するための即時実行関数
      (function() {
        // aria-hidden属性のセッターを上書き
        Object.defineProperty(Element.prototype, 'ariaHidden', {
          set: function(val) {
            if (this.tagName === 'BODY') {
              console.warn('aria-hidden="true" on body is not allowed');
              return;
            }
            this.setAttribute('aria-hidden', val);
          },
          get: function() {
            return this.getAttribute('aria-hidden');
          }
        });
      })();
    </script>

    <%= stylesheet_link_tag "application", "data-turbo-track": "reload" %>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet">
    <style>
      /* カスタムCSS */
      .content-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 0 15px;
      }
      
      .navbar-brand {
        padding-left: 0;
      }
      
      @media (max-width: 992px) {
        .navbar-brand {
          margin-left: 0;
        }
      }
      
      /* タグ削除ボタンのスタイル */
      .tag-delete-btn {
        padding: 2px 4px !important;
        margin-left: 2px !important;
        font-size: 16px !important;
        cursor: pointer !important;
      }
    </style>
    <%= javascript_importmap_tags %>
  </head>

  <body>
    <%= render 'shared/navbar' %>

    <div class="content-container mt-4">
      <div id="flash-container">
        <% if flash[:notice].present? %>
          <div class="alert alert-success alert-dismissible fade show" role="alert">
            <%= flash[:notice] %>
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="閉じる"></button>
          </div>
        <% end %>
        
        <% if flash[:alert].present? %>
          <div class="alert alert-warning alert-dismissible fade show" role="alert">
            <%= flash[:alert] %>
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="閉じる"></button>
          </div>
        <% end %>
      </div>
      
      <%= yield %>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    
    <script>
      // CSRFトークンを更新する関数
      document.addEventListener('DOMContentLoaded', function() {
        const token = document.querySelector('meta[name="csrf-token"]').getAttribute('content');
        
        // フォーム送信前にCSRFトークンを更新
        document.addEventListener('submit', function(e) {
          const tokenInputs = e.target.querySelectorAll('input[name="authenticity_token"]');
          tokenInputs.forEach(input => {
            input.value = token;
          });
        });
        
        // 即時に実行する
        (function removeBodyAriaHidden() {
          // bodyからaria-hidden属性を強制的に削除
          document.body.removeAttribute('aria-hidden');
          
          // aria-hidden属性の設定を監視して防止
          const bodyEl = document.body;
          const origSetAttr = bodyEl.setAttribute;
          bodyEl.setAttribute = function(name, value) {
            if (name === 'aria-hidden') {
              console.warn('Preventing aria-hidden on body');
              return;
            }
            return origSetAttr.call(this, name, value);
          };
          
          // MutationObserverで継続的に監視
          const observer = new MutationObserver(function() {
            if (document.body.hasAttribute('aria-hidden')) {
              document.body.removeAttribute('aria-hidden');
            }
          });
          
          observer.observe(document.body, { 
            attributes: true, 
            attributeFilter: ['aria-hidden']
          });
          
          // 100ms間隔で定期的にチェック
          setInterval(function() {
            if (document.body.hasAttribute('aria-hidden')) {
              document.body.removeAttribute('aria-hidden');
            }
          }, 100);
        })();
      });
    </script>
  </body>
</html>

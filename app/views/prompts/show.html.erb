<%= csrf_meta_tags %>
<%= csp_meta_tag %>

<div class="content-container py-3 py-md-5">
  <div class="row justify-content-center">
    <!-- 親コンテナの幅を広くする -->
    <div class="col-12">
      <div class="row">
        <!-- プロンプト詳細カード：PCでは左側（8カラム）、スマホでは全幅 -->
        <div class="col-lg-8 mb-3 mb-lg-0">
          <div class="card h-100" style="background-color: #F8F9FA; border: none; box-shadow: 0 2px 4px rgba(0,0,0,0.1);">
            <div class="card-header d-flex justify-content-between align-items-center flex-wrap gap-2" style="background-color: #F8F9FA; border: none; padding: 1rem;">
              <h1 class="h3 mb-0">プロンプト詳細</h1>
              <div class="d-flex gap-2">
                <button type="button" id="toggle-edit-mode" class="btn btn-outline-dark" style="min-height: 38px; min-width: 64px;">
                  編集
                </button>
                <%= button_to "削除", prompt_path(@prompt), 
                    method: :delete, 
                    class: "btn btn-outline-danger", 
                    form: { data: { turbo_confirm: "本当に削除しますか？" } }, 
                    style: "min-height: 38px; min-width: 64px;" %>
              </div>
            </div>
            
            <!-- 表示モード -->
            <div class="card-body p-3 p-md-4" id="view-mode">
              <div class="mb-4">
                <h4 class="h4 mb-3"><%= @prompt.title %></h4>
                
                <% if @prompt.url.present? %>
                  <div class="mb-3">
                    <label class="form-label text-muted mb-1">URL</label>
                    <div class="overflow-auto">
                      <%= link_to @prompt.url, @prompt.url, target: "_blank", class: "text-dark
                       text-break" %>
                    </div>
                  </div>
                <% end %>
                
                <div class="mb-3">
                  <label class="form-label text-muted mb-1">説明</label>
                  <div class="bg-white p-3 rounded"><%= simple_format(@prompt.description) %></div>
                </div>




                </div>
            </div>
            
            <!-- 編集モード -->
            <div class="card-body p-3 p-md-4" id="edit-mode" style="display: none;">
              <%= form_with(model: @prompt, local: true, id: "edit-form") do |f| %>
                <% if @prompt.errors.any? %>
                  <div class="alert alert-danger">
                    <ul class="mb-0">
                      <% @prompt.errors.full_messages.each do |message| %>
                        <li><%= message %></li>
                      <% end %>
                    </ul>
                  </div>
                <% end %>
                
                <div class="mb-3">
                  <%= f.label :title, "タイトル", class: "form-label text-muted" %>
                  <%= f.text_field :title, class: "form-control form-control-lg" %>
                </div>
                
                <div class="mb-3">
                  <%= f.label :url, "URL", class: "form-label text-muted" %>
                  <%= f.url_field :url, class: "form-control", inputmode: "url" %>
                </div>
                
                <div class="mb-3">
                  <%= f.label :description, "説明", class: "form-label text-muted" %>
                  <%= f.text_area :description, rows: 8, class: "form-control" %>
                </div>
                




                <div class="d-flex justify-content-end gap-2 mt-4">
                  <button type="button" id="cancel-edit" class="btn btn-outline-secondary" style="min-height: 38px; min-width: 88px;">
                    キャンセル
                  </button>
                  <%= f.submit "更新する", class: "btn btn-dark", style: "min-height: 38px; min-width: 88px;" %>
                </div>
              <% end %>
            </div>
          </div>
        </div>

        <!-- タグセクション：PCでは右側（4カラム）、スマホでは全幅 -->
        <div class="col-lg-4">
          <div class="card" style="background-color: #F8F9FA; border: none; box-shadow: 0 2px 4px rgba(0,0,0,0.1);">
            <div class="card-header d-flex justify-content-between align-items-center flex-wrap gap-2" style="background-color: #F8F9FA; border: none; padding: 1rem;">
              <h5 class="mb-0">タグ管理</h5>
              <!-- タグ提案機能は一時的に無効化 -->
              <!--
              <%= link_to prompt_path(@prompt, suggested: true), 
                  class: "btn btn-outline-dark d-inline-flex align-items-center gap-2",
                  id: "suggest-tags-button",
                  style: "min-height: 38px;" do %>
                <i class="bi bi-magic"></i>
                <span>AIタグを提案</span>
              <% end %>
              -->
              <button class="btn btn-outline-dark d-inline-flex align-items-center gap-2" disabled style="min-height: 38px;">
                <i class="bi bi-magic"></i>
                <span>AIタグを提案</span>
              </button>
            </div>
            <div class="card-body p-3 p-md-4">
              <!-- 一時的にタグ機能はメンテナンス中 -->
              <div class="alert alert-info">
                <p class="mb-0 d-flex align-items-center gap-2">
                  <i class="bi bi-info-circle"></i>
                  <span>タグ機能は現在メンテナンス中です</span>
                </p>
              </div>
              
              <!-- 既存のタグ表示コードはコメントアウト
              <div class="mb-4">
                <label class="form-label text-muted mb-2">現在のタグ</label>
                <div class="d-flex flex-wrap gap-2">
                  <% @prompt.tags.each do |tag| %>
                    <div class="badge bg-dark text-white p-2 d-flex align-items-center" 
                         style="font-size: 0.8rem; min-height: 30px;">
                      <%= link_to tag.name, prompts_path(tag: tag.name), class: "text-white text-decoration-none me-2" %>
                      <%= button_to '×', 
                          prompt_tag_path(@prompt, tag), 
                          method: :delete, 
                          class: 'btn-close btn-close-white', 
                          form: { style: 'display: inline;' }, 
                          form_class: 'd-inline', 
                          aria: { label: 'タグを削除' }, 
                          data: { 
                            turbo_confirm: 'このタグを削除しますか？',
                            turbo_frame: 'tags'
                          } %>
                    </div>
                  <% end %>
                </div>
              </div>

              <%= form_with(model: [@prompt, Tag.new], local: true, class: 'mb-4') do |form| %>
                <label class="form-label text-muted mb-2">新しいタグを追加</label>
                <div class="input-group">
                  <%= form.text_field :name, 
                  class: 'form-control form-control-sm', 
                  placeholder: 'タグ名を入力...', 
                  autocomplete: 'off',
                  style: "min-height: 30px;",
                  data: { 
                    controller: 'tag-input',
                    action: 'keydown->tag-input#handleKeydown'
                  } %>          
                  <button type="submit" class="btn btn-dark d-inline-flex align-items-center gap-2" style="min-height: 38px;">
                    <i class="bi bi-plus-lg"></i>
                    <span>追加</span>
                  </button>
                </div>
                <div class="form-text">Enterキーで追加できます</div>
              <% end %>

              <div id="suggested-tags-container">
                <label class="form-label text-muted mb-2">AIによるタグ提案</label>
                <div id="suggested-tags">
                  <% if @suggested_tags.nil? || @suggested_tags.empty? %>
                    <div class="alert alert-light">
                      <p class="mb-0 d-flex align-items-center gap-2">
                        <i class="bi bi-info-circle"></i>
                        <span>「AIタグを提案」ボタンをクリックすると、プロンプトの内容から関連するタグを自動で提案します</span>
                      </p>
                    </div>
                  <% else %>
                    <div class="d-flex flex-wrap gap-2">
                      <% @suggested_tags.each do |tag| %>
                        <button type="button" 
                                class="btn btn-outline-dark suggested-tag-btn" 
                                style="min-height: 38px;"
                                data-tag-name="<%= tag.name %>"
                                data-bs-toggle="tooltip"
                                title="クリックでタグを追加">
                          <%= tag.name %>
                        </button>
                      <% end %>
                    </div>
                  <% end %>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>

      <div class="d-grid d-md-block mt-3">
        <%= link_to prompts_path, class: "btn btn-outline-secondary", style: "min-height: 38px;" do %>
          <i class="bi bi-arrow-left"></i> 一覧に戻る
        <% end %>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // 編集モード切り替え
    const toggleEditButton = document.getElementById('toggle-edit-mode');
    const cancelEditButton = document.getElementById('cancel-edit');
    const viewMode = document.getElementById('view-mode');
    const editMode = document.getElementById('edit-mode');
    
    if (toggleEditButton && cancelEditButton && viewMode && editMode) {
      toggleEditButton.addEventListener('click', function() {
        viewMode.style.display = 'none';
        editMode.style.display = 'block';
        toggleEditButton.style.display = 'none';  // 編集モード時はボタンを非表示
      });
      
      cancelEditButton.addEventListener('click', function() {
        editMode.style.display = 'none';
        viewMode.style.display = 'block';
        toggleEditButton.style.display = 'inline-block';  // 表示モードに戻る時はボタンを表示
        toggleEditButton.textContent = '編集';
      });
    }
    
    // ツールチップの初期化
    const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
    const tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
      return new bootstrap.Tooltip(tooltipTriggerEl)
    });

    // タグ入力のEnterキーハンドリング
    const tagInput = document.querySelector('input[name="tag[name]"]');
    if (tagInput) {
      tagInput.addEventListener('keydown', function(e) {
        if (e.key === 'Enter') {
          e.preventDefault();
          this.closest('form').submit();
        }
      });
    }

    // 提案タグのホバーエフェクト
    const suggestedTags = document.querySelectorAll('.suggested-tag-btn');
    suggestedTags.forEach(tag => {
      tag.addEventListener('mouseover', function() {
        this.classList.add('shadow-sm');
      });
      tag.addEventListener('mouseout', function() {
        this.classList.remove('shadow-sm');
      });
    });

    // 提案タグのクリックイベント
    document.querySelectorAll('.suggested-tag-btn').forEach(button => {
      button.addEventListener('click', function() {
        const tagName = this.getAttribute('data-tag-name');
        const tagInput = document.querySelector('input[name="tag[name]"]');
        if (tagInput) {
          tagInput.value = tagName;
          tagInput.closest('form').submit();
        }
      });
    });
  });
</script>
